{"version":3,"sources":["Components/filter/FilterButton.js","constants/visibilityFilters.js","redux/actions/actionTypes.js","Components/filter/FilterContainer.js","redux/actions/todoActions.js","Components/filter/Filter.js","Components/addTodoItem/AddTodoItem.js","Components/addTodoItem/AddTodoItemContainer.js","Components/todoList/TodoItem.js","Components/todoList/TodoListContainer.js","Components/todoList/TodoList.js","Components/App.js","redux/reducers/index.js","redux/reducers/todos.js","redux/reducers/visibilityFilter.js","index.js"],"names":["FilterButton","_ref","visibilityFilter","onClick","children","react_default","a","createElement","style","backgroundColor","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","connect","state","dispatch","applyFilter","filter","type","AddTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","value","target","addTodo","addTodoHandler","text","completed","onChange","React","Component","todoItem","todo","AddTodoItem","TodoItem","toggleTodo","textDecoration","getVisibileTodos","todos","index","map","i","key","App","Fragment","AddTodoItemContainer","TodoListContainer","FilterContainer","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","store","createStore","reducer","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.37fe59cf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function FilterButton({ visibilityFilter, onClick, children }) {\r\n  return (\r\n    <button\r\n      style={{\r\n        backgroundColor: visibilityFilter === children ? \"green\" : \"\"\r\n      }}\r\n      onClick={() => onClick(children)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","export const SHOW_ALL = \"All\";\r\nexport const SHOW_COMPLETED = \"Completed\";\r\nexport const SHOW_ACTIVE = \"Active\";\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\n","import { connect } from \"react-redux\";\r\nimport Filter from \"./Filter\";\r\nimport { setVisibilityFilter } from \"../../redux/actions/todoActions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  visibilityFilter: state.visibilityFilter\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    applyFilter: filter => dispatch(setVisibilityFilter(filter))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filter);\r\n","import { ADD_TODO, TOGGLE_TODO, SET_VISIBILITY_FILTER } from \"./actionTypes\";\r\n\r\nexport function addTodo(todo) {\r\n  return {\r\n    type: ADD_TODO,\r\n    todo\r\n  };\r\n}\r\n\r\nexport function toggleTodo(index) {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    index\r\n  };\r\n}\r\n\r\nexport function setVisibilityFilter(visibilityFilter) {\r\n  return {\r\n    type: SET_VISIBILITY_FILTER,\r\n    visibilityFilter\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport {\r\n  SHOW_ALL,\r\n  SHOW_COMPLETED,\r\n  SHOW_ACTIVE\r\n} from \"../../constants/visibilityFilters\";\r\n\r\nexport default function Filter({ visibilityFilter, applyFilter }) {\r\n  return (\r\n    <div>\r\n      <FilterButton visibilityFilter={visibilityFilter} onClick={applyFilter}>\r\n        {SHOW_ALL}\r\n      </FilterButton>\r\n      <FilterButton visibilityFilter={visibilityFilter} onClick={applyFilter}>\r\n        {SHOW_COMPLETED}\r\n      </FilterButton>\r\n      <FilterButton visibilityFilter={visibilityFilter} onClick={applyFilter}>\r\n        {SHOW_ACTIVE}\r\n      </FilterButton>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AddTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  addTodo = () => {\r\n    this.props.addTodoHandler({ text: this.state.value, completed: false });\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input value={this.state.value} onChange={this.handleChange} />\r\n        <button onClick={this.addTodo}>Add</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport AddTodoItem from \"./AddTodoItem\";\r\nimport { addTodo as addTodoActionCreator } from \"../../redux/actions/todoActions\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addTodoHandler: todoItem => dispatch(addTodoActionCreator(todoItem))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddTodoItem);\r\n","import React from \"react\";\r\n\r\nexport default function TodoItem({ text, completed, toggleTodo }) {\r\n  let style = completed ? { textDecoration: \"line-through\" } : null;\r\n  return (\r\n    <li style={style} onClick={toggleTodo}>\r\n      {text}\r\n    </li>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport TodoList from \"./TodoList\";\r\nimport { toggleTodo } from \"../../redux/actions/todoActions\";\r\nimport {\r\n  SHOW_ALL,\r\n  SHOW_COMPLETED,\r\n  SHOW_ACTIVE\r\n} from \"../../constants/visibilityFilters\";\r\nfunction getVisibileTodos(todos, visibilityFilter) {\r\n  switch (visibilityFilter) {\r\n    case SHOW_COMPLETED:\r\n      return todos.filter(todo => todo.completed);\r\n    case SHOW_ACTIVE:\r\n      return todos.filter(todo => !todo.completed);\r\n    case SHOW_ALL:\r\n    default:\r\n      return todos;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibileTodos(state.todos, state.visibilityFilter)\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    toggleTodo: index => dispatch(toggleTodo(index))\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);\r\n","import React from \"react\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoList({ todos, visibilityFilter, toggleTodo }) {\r\n  return (\r\n    <ol>\r\n      {todos.map((todo, i) => {\r\n        return (\r\n          <TodoItem\r\n            key={i}\r\n            toggleTodo={() => toggleTodo(i)}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n          />\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FilterContainer from \"./filter/FilterContainer\";\r\nimport AddTodoItemContainer from \"./addTodoItem/AddTodoItemContainer\";\r\nimport TodoListContainer from \"./todoList/TodoListContainer\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <AddTodoItemContainer />\r\n        <TodoListContainer />\r\n        <FilterContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n});\r\n","import { ADD_TODO, TOGGLE_TODO } from \"../actions/actionTypes\";\r\n\r\nexport default function todos(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.todo];\r\n    case TOGGLE_TODO:\r\n      return state.map((todo, i) =>\r\n        i === action.index\r\n          ? { text: todo.text, completed: !todo.completed }\r\n          : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_VISIBILITY_FILTER } from \"../actions/actionTypes\";\r\nimport { SHOW_ALL } from \"../../constants/visibilityFilters\";\r\n\r\nexport default function visibilityFilter(state = SHOW_ALL, action) {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.visibilityFilter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./redux/reducers\";\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}